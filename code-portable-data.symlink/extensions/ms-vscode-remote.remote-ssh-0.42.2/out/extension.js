!function(e,t){for(var n in t)e[n]=t[n]}(exports,function(e){var t={};function n(o){if(t[o])return t[o].exports;var s=t[o]={i:o,l:!1,exports:{}};return e[o].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(o,s,function(t){return e[t]}.bind(null,s));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=21)}([function(e,t){e.exports=require("vscode")},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("path")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isWindows="win32"===process.platform},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(1),s=n(10),r=n(2),i=n(23),a=n(5),c=n(0),l=n(25),u=n(26),m=n(3),d=a.promisify(o.readFile),h=a.promisify(o.writeFile),p=a.promisify(o.exists),f=a.promisify(o.chmod),g="remote.SSH.configFile";function w(){return c.workspace.getConfiguration().get(g)}t.sshConfigurationFileFromSetting=w;const v=r.resolve(s.userInfo().homedir,".ssh/config"),y=m.isWindows?"C:\\ProgramData\\ssh\\ssh_config":"/etc/ssh/ssh_config";function S(){return[v,y]}function $(){const e=w();return e?[e]:S()}function C(e){const t=Object.create(null);for(let n=0;n<e.length;n++){const o=e[n];if(o.param&&"host"===o.param.toLowerCase()&&o.value&&o.config)for(const e of o.config)e.param&&"hostname"===e.param.toLowerCase()&&e.value&&H(o.value).forEach(n=>t[n]=e.value)}return t}async function _(e,t){for(let n of t){const t=(await b(n)).compute(e.hostName);if(t&&t.HostName)return t.IdentityFile&&(t.IdentityFile=t.IdentityFile.map(e=>u.untildify(e))),t}return null}async function b(e){const t=await async function(e){if(await p(e)){const t=await d(e);return t.toString("utf8")}return""}(e);return i.parse(t)}function x(e){const t=new Set;for(let n=0;n<e.length;n++){const o=e[n];o.param&&"host"===o.param.toLowerCase()&&o.value&&o.config&&H(o.value).forEach(e=>t.add(e))}return Array.from(t.keys())}function H(e){return e.split("#")[0].split(" ").filter(e=>!!e).filter(e=>!function(e){return!!e.match(/[?*]/)}(e))}t.defaultSshConfigurationFiles=S,t.getSshConfigurationFiles=$,t.getConfiguredSshHosts=async function(){const e=[];for(let t of $()){const n=await b(t);e.push(...x(n))}return e},t.getConfiguredSshHostNames=async function(){const e={};for(let t of $()){const n=C(await b(t));Object.keys(n).forEach(t=>e[t]=n[t])}return e},t.getConfigurationForHost=async function(e){return _(e,await $())},t._getConfigurationForHost=_;const E=new c.EventEmitter,T=E.event;t.onDidChangeSshConfiguration=T,c.workspace.onDidChangeConfiguration(e=>{e.affectsConfiguration(g)&&E.fire()});class k{constructor(e){this.logger=e,this.fileBeingWatched=new Set}startWatching(e){this.logger.trace(`ConfigFileWatcher: start watchting ${e.toString()}`),this.fileBeingWatched.add(e.toString()),this.saveListener||(this.logger.trace("ConfigFileWatcher: adding save listener"),this.saveListener=c.workspace.onDidSaveTextDocument(e=>this.documentSaved(e))),this.closeListener||(this.logger.trace("ConfigFileWatcher: adding close listener"),this.closeListener=c.workspace.onDidCloseTextDocument(e=>this.documentClosed(e)))}stopWatching(e){this.logger.trace(`ConfigFileWatcher: stop watchting ${e.toString()}`),this.fileBeingWatched.delete(e.toString()),0===this.fileBeingWatched.size&&(this.saveListener&&(this.logger.trace("ConfigFileWatcher: removing save listener"),this.saveListener.dispose(),this.saveListener=void 0),this.closeListener&&(this.logger.trace("ConfigFileWatcher: removing close listener"),this.closeListener.dispose(),this.closeListener=void 0))}documentSaved(e){this.logger.trace(`ConfigFileWatcher: saving ${e.uri}`),this.fileBeingWatched.has(e.uri.toString())&&(this.logger.trace(`ConfigFileWatcher: firing change event for ${e.uri}`),E.fire())}documentClosed(e){this.logger.trace(`ConfigFileWatcher: closing ${e.uri}`),this.fileBeingWatched.has(e.uri.toString())&&this.stopWatching(e.uri)}}let P;t.configureSshHosts=async function(e){const t=w(),o=await l.pickSshConfigurationFile(t||S());if(o)if("command"===o.type)"help"===o.id?c.env.openExternal(c.Uri.parse("https://aka.ms/vscode-remote/ssh/config-file")):"settings"===o.id&&async function(){const{name:e,publisher:t,extensionPack:o}=n(6),s=[`${t}.${e}`];o&&o.forEach(e=>s.push(e)),await c.commands.executeCommand("workbench.action.openSettings",`@ext:${s.join(",")} config file`)}();else if("file"===o.type){const t=o.path;if(t){const n=c.Uri.file(t);P||(P=new k(e)),P.startWatching(n),await p(t)?await c.commands.executeCommand("vscode.open",n):await async function(e){const t=r.dirname(e);await p(t)||(await u.mkdirp(t),m.isWindows||e!==v||await f(t,448)),await h(e,""),m.isWindows||e!==v||await f(e,384);const n=await c.window.showTextDocument(c.Uri.file(e));await n.insertSnippet(new c.SnippetString("# Read more about SSH config files: https://linux.die.net/man/5/ssh_config\nHost ${1:alias}\n    HostName ${2:hostname}\n    User ${3:user}"))}(t)}}}},function(e,t){e.exports=require("util")},function(e){e.exports={name:"remote-ssh",displayName:"Remote - SSH",description:"Open any folder on a remote machine using SSH and take advantage of VS Code's full feature set.",version:"0.42.2",preview:!0,publisher:"ms-vscode-remote",icon:"resources/remote-ssh.png",repository:{type:"git",url:"https://github.com/Microsoft/vscode-remote-release.git"},bugs:{url:"https://github.com/Microsoft/vscode-remote-release/issues"},license:"SEE LICENSE IN LICENSE.txt",engines:{vscode:"^1.34.20"},extensionKind:"ui",extensionPack:["ms-vscode-remote.remote-ssh-explorer","ms-vscode-remote.remote-ssh-edit"],categories:["Other"],keywords:["remote development","remote","ssh"],activationEvents:["onCommand:opensshremotes.openEmptyWindow","onCommand:opensshremotes.openEmptyWindowInCurrentWindow","onCommand:opensshremotes.openConfigFile","onCommand:opensshremotes.manageTunnel","onCommand:opensshremotes.closeTunnel","onCommand:opensshremotes.cleanDevBox","onCommand:opensshremotes.cleanRemoteServer","onCommand:opensshremotes.getHelp","onCommand:opensshremotes.getStarted","onCommand:opensshremotes.reportIssue","onCommand:opensshremotes.settings","onCommand:opensshremotes.provideFeedback","onResolveRemoteAuthority:ssh-remote"],main:"./out/extension",enableProposedApi:!0,contributes:{configuration:{title:"Remote - SSH",properties:{"remote.SSH.configFile":{type:"string",description:"The absolute file path to a custom SSH config file",default:""},"remote.SSH.showLoginTerminal":{type:"boolean",markdownDescription:"Always reveal the SSH login terminal",default:!1},"remote.SSH.defaultExtensions":{type:"array",markdownDescription:"List of extensions that should be installed automatically on all SSH hosts"}}},commands:[{command:"opensshremotes.openEmptyWindow",title:"Connect to Host...",category:"Remote-SSH"},{command:"opensshremotes.openEmptyWindowOnCurrentHost",title:"New Window on Active Host",category:"Remote-SSH"},{command:"opensshremotes.openEmptyWindowInCurrentWindow",title:"Connect Current Window to Host...",category:"Remote-SSH"},{command:"opensshremotes.openConfigFile",title:"Open Configuration File...",category:"Remote-SSH"},{command:"opensshremotes.manageTunnel",title:"Forward Port from Active Host...",category:"Remote-SSH"},{command:"opensshremotes.closeTunnel",title:"Stop Forwarding Port from Active Host...",category:"Remote-SSH"},{command:"opensshremotes.cleanDevBox",title:"Uninstall VS Code Server from Host...",category:"Remote-SSH"},{command:"opensshremotes.cleanRemoteServer",title:"Kill VS Code Server on Host...",category:"Remote-SSH"},{command:"opensshremotes.getHelp",title:"Help",category:"Remote-SSH"},{command:"opensshremotes.getStarted",title:"Getting Started",category:"Remote-SSH"},{command:"opensshremotes.reportIssue",title:"Report Issue...",category:"Remote-SSH"},{command:"opensshremotes.settings",title:"Settings",category:"Remote-SSH"},{command:"opensshremotes.provideFeedback",title:"Provide Feedback",category:"Remote-SSH"}],resourceLabelFormatters:[{scheme:"vscode-remote",authority:"ssh-remote+*",formatting:{label:"${path}",separator:"/",tildify:!0,workspaceSuffix:"SSH"}}],menus:{"statusBar/windowIndicator":[{command:"opensshremotes.openEmptyWindow",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"1_remote_ssh_general@1"},{command:"opensshremotes.openConfigFile",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"1_remote_ssh_general@2"},{command:"opensshremotes.manageTunnel",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"1_remote_ssh_general@3"},{command:"opensshremotes.closeTunnel",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"1_remote_ssh_general@4"},{command:"opensshremotes.settings",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"9_remote_ssh_help@1"},{command:"opensshremotes.reportIssue",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"9_remote_ssh_help@2"},{command:"opensshremotes.provideFeedback",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"9_remote_ssh_help@3"},{command:"opensshremotes.getHelp",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"9_remote_ssh_help@4"},{command:"opensshremotes.openEmptyWindow",when:"!remoteAuthority",group:"1_local_ssh@1"},{command:"opensshremotes.openConfigFile",when:"!remoteAuthority",group:"1_local_ssh@2"},{command:"opensshremotes.getStarted",when:"!remoteAuthority",group:"1_local_ssh@3"}],commandPalette:[{command:"opensshremotes.getStarted",when:"false"},{command:"opensshremotes.openEmptyWindowOnCurrentHost",when:"remoteAuthority =~ /^ssh-remote\\+.*$/"},{command:"opensshremotes.manageTunnel",when:"remoteAuthority =~ /^ssh-remote\\+.*$/"},{command:"opensshremotes.closeTunnel",when:"remoteAuthority =~ /^ssh-remote\\+.*$/"},{command:"opensshremotes.provideFeedback",when:"remoteAuthority =~ /^ssh-remote\\+.*$/"}]}},scripts:{"vscode:prepublish":"webpack --mode production",compile:"webpack --mode none",watch:"webpack --mode none --watch",watch2:"tsc -w -p .",package:"vsce package --yarn",lint:"tslint -p .",pretest:"tsc -p . --outDir out-test",test:"node ./out-test/test/runTests.js"},devDependencies:{"@types/mocha":"^5.2.6","@types/node":"^10.12.26","@types/sinon":"^7.0.11","@types/webpack":"^4.4.27","copy-webpack-plugin":"^5.0.2","mocha-junit-reporter":"^1.21.0","mocha-multi-reporters":"^1.1.7",sinon:"^7.3.1","ts-loader":"^5.3.3",tslint:"^5.15.0","tslint-webpack-plugin":"^2.0.4",typescript:"^3.4.2",vsce:"^1.59.0",vscode:"^1.1.33","vscode-nls-dev":"^3.2.6","vscode-test":"^0.3.5",webpack:"^4.29.6","webpack-cli":"^3.3.0"},dependencies:{"ssh-config":"1.1.3"}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(1),s=n(2),r=n(0),i=n(3),a=n(4);function c(e){return e.user?`${e.user}@${e.hostName}`:`${e.hostName}`}async function l(e){const t=await a.getConfigurationForHost(e);return t&&t.ConnectTimeout?"":"-o ConnectTimeout=15"}function u(e){let t="";const n=r.workspace.getConfiguration().get("remote.SSH.configFile");return n&&(e.info(`Using SSH config file "${n}"`),t=`-F ${n}`),t}t.generateMultiLineCommand=async function(e,t,n){const r=c(e);if(i.isWindows){if(!process.env.TEMP)throw new Error("The TEMP environment variable must be set");const i=s.join(process.env.TEMP,`vscode-linux-multi-line-command-${e.hostName}.sh`);return new Promise(e=>{o.writeFile(i,t,t=>{if(t)throw new Error(`Failed to write install script to path ${i}. ${t.message}`);e(`type "${i}" | ${h()} ${u(n)} "${r}" bash`)})})}return`${h()} ${await l(e)} ${u(n)} "${r}" bash << 'EOSSH'\n${t}\nEOSSH`},t.getRemoteCommandSegment=function(){return"-o RemoteCommand=none"},t.getHostCommandSegment=c,t.getConnectTimeoutSegment=l,t.getConfigFileCommandSegment=u;const m=process.env.hasOwnProperty("PROCESSOR_ARCHITEW6432");let d="ssh";if(i.isWindows&&m){const e=process.env.SystemRoot||"C:\\WINDOWS",t=s.join(e,"Sysnative","OpenSSH","ssh.exe");d=t}function h(){return d}t.getSshCommand=h},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0);t.defaultSystemInteractor={createTerminal:o.window.createTerminal,onDidCloseTerminal:o.window.onDidCloseTerminal}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),s=n(11),r=n(4),i=n(12),a=n(3),c=n(16),l=n(28);function u(e){return async function(e){return new Promise((t,n)=>{const s=o.window.createInputBox();s.title=e,s.password=!0;let r=!1;s.onDidAccept(()=>{r=!0;const e=s.value;s.dispose(),t(e)}),s.onDidHide(()=>{r||t(void 0)}),s.show()})}(`Enter passphrase for ssh key ${e?`"${e}"`:""}`)}class m{constructor(e,t){this.label=e,this.value=t,this.isCloseAffordance=!0,this.title=e}}async function d(e,t){return new Promise((n,s)=>{const r=o.window.createQuickPick();r.canSelectMany=!1,r.items=[new m("Continue","yes"),new m("Cancel","no")],r.title=`"${e}" has fingerprint "${t}".`;let i=!1;r.onDidAccept(async()=>{i=!0;const e=r.selectedItems[0].value;r.dispose(),n(e)}),r.onDidHide(()=>{i||n()}),r.show()})}function h(e){const t=[];let{systemInteractor:n,command:s,interactor:r,nickname:i,logger:u,token:m}=e;return new Promise((d,h)=>{let p,f,g,w,v,y="";function S(){f&&(f.dispose(),f=void 0),g&&(g.dispose(),g=void 0),p&&(p.dispose(),p=void 0),w&&(clearInterval(w),w=void 0),v&&v.dispose(),l.dispose(t)}function $(e=!1){S(),u.debug(`"${i}" terminal command ${e?"canceled":"done"}`);const t=e?"":c.lastNonemptyLine(y);d(t||"")}m&&(v=m.onCancellationRequested(()=>{$(!0)}));try{let c;c=e.sendText?"":a.isWindows?`/c (${s}) & exit /b 0`:["-c",s+"\nexit 0"];const l={cwd:a.isWindows?o.Uri.file(process.env.USERPROFILE||"c:\\"):o.Uri.file(process.env.HOME||"/"),name:i,shellPath:a.isWindows?"cmd.exe":"sh",shellArgs:c};if(g=n.createTerminal(l),e.revealTerminal&&t.push(e.revealTerminal(()=>{g&&g.show()})),e.sendText){const t=a.isWindows?`(${e.sendText}) & exit /b 0`:e.sendText+"\nexit 0";g.sendText(t),u.trace(`"${i}" wrote data to terminal: "${e.sendText}"`)}o.workspace.getConfiguration().get("remote.SSH.showLoginTerminal")&&(r=void 0,g.show()),p=n.onDidCloseTerminal(e=>{e===g&&(g=void 0,$())}),f=g.onDidWriteData(async e=>{if(w&&(clearInterval(w),w=void 0),function(e,t,n){const s=e.replace(/\r?\n$/,"");if(o.env.logLevel===o.LogLevel.Trace)n.trace(`"${t}" terminal received data: "${s}"`);else{const e=s.split(/\n/).map(e=>`> ${e}`).join("\n");n.trace(e)}}(e,i,u),y+=e,r){const e=await r.onData(y);if("consume"===e.postAction&&(y=""),e.canceled)return void $(!0);if(e.response){g.sendText(`${e.response}\n`);const t=e.isPassword?e.response.replace(/./g,"*"):e.response;u.trace(`"${i}" wrote data to terminal: "${t}"`)}}})}catch(e){!function(e){S(),u.error(`"${i}" process failed: ${e}`),h(e)}(e)}})}t.showHostKeyConfirmation=d,t.runSshTerminalCommandWithLogin=async function(e){let t;const n=async e=>t=await u(e),o=new class{async onData(t){let o=await s.handleFingerprint(t,e.host,d,e.logger);return"consume"!==o.postAction&&(o=await s.handlePassphrase(t,n,e.logger)),o}},a=await h({systemInteractor:e.systemInteractor,command:e.command,interactor:o,nickname:e.nickname,logger:e.logger,token:e.token,revealTerminal:e.revealTerminal});if(t){e.logger.trace("User entered passphrase");const n=await r.getConfigurationForHost(e.host);e.logger.trace("Passphrase was entered and ssh config entry was found - adding SSH key to agent");const o=n&&n.IdentityFile&&n.IdentityFile[0]||void 0;await i.addKeyToSshAgent(o,async()=>t,e.logger)}return a},t.runInteractiveSshTerminalCommand=h},function(e,t){e.exports=require("os")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.handleFingerprint=async function(e,t,n,o){const s=/fingerprint\sis\s(.+)\./,r={postAction:"keep"},i=e.trim().split("\n");if(i.length>=3&&i[i.length-1].indexOf("Are you sure you want to continue connecting")>=0){let o=i.length-1;for(;--o>=0&&!i[i.length-1].search(s););if(o>=0){r.postAction="consume";const a=s.exec(i[o]),c=await n(t.hostName,a?a[1]:e);c?r.response=c:r.canceled=!0}}else 1!==i.length||0!==i[0].indexOf("Warning: Permanently added")&&0!==i[0].indexOf("yes")&&0!==i[0].indexOf("no")||(r.postAction="consume");return r},t.handlePassphrase=async function(e,t,n){const o={postAction:"keep"},s=e.trim().split("\n");if(s.some(e=>e.indexOf("Enter passphrase for")>=0)){o.postAction="consume";const e=await t();e?(o.response=e,o.isPassword=!0):o.canceled=!0}else s.some(e=>e.indexOf("Identity added:")>=0)&&(o.postAction="consume");return o},t.getExitCode=function(e,t){const n=new RegExp(`${t}##([0-9]*)##`).exec(e);if(n)try{const e=parseInt(n[1]);return Number.isNaN(e)?void 0:e}catch(e){return}return 0},t.handlePassword=async function(e,t,n){const o={postAction:"keep"};if(e.trim().split("\n").some(e=>e.indexOf("Password:")>=0)){o.postAction="consume";const e=await t();e?(o.response=e,o.isPassword=!0):o.canceled=!0}return o},t.handle2FA=async function(e,t,n){const o={postAction:"keep"};if(e.trim().split("\n").some(e=>e.indexOf("Verification code:")>=0)){o.postAction="consume";const e=await t();e?(o.response=e,o.isPassword=!0):o.canceled=!0}return o}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(1),s=n(10),r=n(2),i=n(5),a=n(0),c=n(11),l=n(9),u=n(3),m=n(8),d=n(15),h=i.promisify(o.writeFile);async function p(e,t){return u.isWindows?await async function(e,t){e=e||"";const n=s.tmpdir(),o=r.join(n,"vscode_add_ssh_key_to_agent.ps1"),i=`\n\t\t# Check if it's already in the ssh-agent\n\t\t$KEY = "${e}"\n\t\tif ($KEY -ne "") {\n\t\t\t$KEY = (Resolve-Path "${e}").toString()\n\t\t}\n\n\t\techo 'PS: adding key to ssh-agent'\n\t\techo ssh-add $KEY\n\t\tssh-add $KEY\n\t\tif ($LASTEXITCODE -ne 0) {\n\t\t\techo ${t}##5##\n\t\t}\n\t`;return await h(o,i),{command:"",sendText:`powershell -ExecutionPolicy Bypass ${o}`}}(e,t):function(e,t){return{command:`\nINSTALL_SCRIPT=\`mktemp\`.sh\ncat << 'EOF' > $INSTALL_SCRIPT\n\t# expand the key path to be absolute\n\tKEY="\`echo ${e=e||""}\`"\n\techo SHELL-SCRIPT: KEY=$KEY\n\techo SHELL-SCRIPT: adding key to ssh-agent\n\tssh-add ${e}\n\tif (( $? > 0 ))\n\tthen\n\t\techo ${t}##5##\n\tfi\nEOF\n\nchmod +x $INSTALL_SCRIPT\n\n/bin/bash -ilc $INSTALL_SCRIPT\n`}}(e,t)}class f extends Error{constructor(){super("Key with passphrase must be in ssh-agent")}}t.NoSshAgentError=f,t.addKeyToSshAgent=async function(e,t,n){const o=d.generateUuid(),s=await p(e,o);let r;const i={onData:async e=>{if(void 0===(r=c.getExitCode(e,o)))n.error("Malformed exit code from add-ssh");else{if(0===r)return c.handlePassphrase(e,t,n);n.error("add-ssh-key failed")}return{}}};if(n.trace("Executing add-ssh-key:\n"+(s.sendText||s.command)),await l.runInteractiveSshTerminalCommand({systemInteractor:m.defaultSystemInteractor,command:s.command,sendText:s.sendText,interactor:i,nickname:"add-ssh-key",logger:n}),r)throw new f};const g="Configure SSH Agent",w="Continue without SSH Agent";t.handleNoSshAgentError=async function(e){let t="SSH Agent not found, please configure the agent.";const n=[g];e&&(n.push(w),t+=" You can also continue without an SSH Agent with a degraded user experience.");const o=await a.window.showErrorMessage(t,{modal:!0},...n);return o===w?(await a.workspace.getConfiguration("remote.SSH").update("showLoginTerminal",!0,a.ConfigurationTarget.Global),!0):(o===g&&a.env.openExternal(a.Uri.parse("https://aka.ms/vscode-remote/troubleshooting#_setting-up-the-ssh-agent")),!1)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(17),s=n(0),r=n(7),i=n(9),a=n(18),c=n(8),l=n(19);class u{constructor(e,t,n,o,s){this.host=e,this.remotePort=t,this.localPort=n,this.name=o,this.internal=s}close(){g(this)}}class m extends u{constructor(e,t,n,o,s,r){super(e,t,n,o,s),this.process=r}dispose(){this.process&&(this.process.kill(),this.process=null)}}class d extends u{constructor(e,t,n,o,s,r){super(e,t,n,o,s),this.tokenSource=r}dispose(){this.tokenSource.cancel()}}let h=[];t.getActiveTunnels=function(){return h.filter(e=>!e.internal)};let p=new s.EventEmitter,f=p.event;function g(e){h=h.filter(t=>t!==e),e.dispose(),p.fire()}t.onDidChangeActiveTunnels=f,t.closeTunnels=function(){h.forEach(e=>e.dispose()),h=[],p.fire()},t.createTunnel=async function({host:e,remotePort:t,preferredLocalPort:n,name:u,internal:f,progress:w,logger:v}){try{const y=await async function(e){let t=await a.findFreePort(e,1,3e3);return t>0?t:a.findFreePort(a.randomPort(),10,3e3)}(n||t);return await function(e,t,n,a,l,u,f){let w;if(u.report({message:"Setting up SSH tunnel"}),s.workspace.getConfiguration().get("remote.SSH.showLoginTerminal")){const o=function(e,t,n,o){return`${r.getSshCommand()} -t ${r.getConfigFileCommandSegment(o)} "${r.getHostCommandSegment(e)}" -L localhost:${n}:localhost:${t} "echo -e 'Connected to SSH Host - Please do not close this terminal' && sleep infinity"`}(e,t,n,f);f.trace(`Spawning tunnel with: ${o}`);const u=new s.CancellationTokenSource;w=new d(e,t,n,a,l,u),h.push(w),i.runSshTerminalCommandWithLogin({systemInteractor:c.defaultSystemInteractor,command:o,host:e,nickname:"SSH Tunnel",logger:f,token:u.token}).then(()=>{f.trace("SSH tunnel command completed unexpectedly")},e=>{f.trace("SSH tunnel command completed unexpectedly with error: "+(e&&e.message))}).finally(()=>{g(w)})}else{const s=function(e,t,n,o){return{cmd:r.getSshCommand(),argsList:[...r.getConfigFileCommandSegment(o).split(" "),r.getHostCommandSegment(e),"-N","-L",`localhost:${n}:localhost:${t}`].filter(e=>!!e.trim())}}(e,t,n,f);f.debug(`Spawning tunnel with: ${s.cmd} ${s.argsList.join(" ")}`);const i=o.spawn(s.cmd,s.argsList,{detached:!0});i.stderr.on("data",e=>{f.trace(`Tunnel(${t}) stderr: ${e.toString()}`)}),i.stdout.on("data",e=>{f.trace(`Tunnel(${t}) stdout: ${e.toString()}`)}),i.unref(),w=new m(e,t,n,a,l,i),h.push(w),i.on("close",()=>{g(w)})}p.fire(w),f.info(`Spawned SSH tunnel between local port ${n} and remote port ${t}`)}(e,t,y,u,f,w,v),w.report({message:"Waiting for port forwarding to be ready"}),v.info("Waiting for ssh tunnel to be ready"),await async function(e,t=1e4){let n=0;for(;await a.isFreePort(e);){if(n>t)throw new Error("Max wait time exhausted");await l.wait(100),n+=100}}(y),v.info(`Tunneling remote port ${t} to local port ${y}`),y}catch(t){const n=t.message||t,o=`Could not establish tunnel to "${e.hostName}" (${n}).`;throw v.error(o),new Error(o)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class o{constructor(e,t){this.hostName=e,this.user=t}toString(){return this.user?`${this.user}@${this.hostName}`:this.hostName}static stringify(e){if(e.user||e.hostName.toLowerCase()!==e.hostName){const t=e.user?{hostName:e.hostName,user:e.user}:{hostName:e.hostName},n=JSON.stringify(t);return Buffer.from(n,"utf8").toString("hex")}return e.hostName}static parse(e){try{const t=JSON.parse(Buffer.from(e,"hex").toString("utf8"));if(t)return new o(t.hostName,t.user)}catch(e){}return o.fromString(e)}static fromString(e){const t=e.lastIndexOf("@");return t>-1?new o(e.substring(t+1),e.substring(0,t)):new o(e)}}t.HostInfo=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class o{constructor(e){this._value=e}asHex(){return this._value}}class s extends o{constructor(){super([s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),"-",s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),"-","4",s._randomHex(),s._randomHex(),s._randomHex(),"-",s._oneOf(s._timeHighBits),s._randomHex(),s._randomHex(),s._randomHex(),"-",s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex(),s._randomHex()].join(""))}static _oneOf(e){return e[Math.floor(e.length*Math.random())]}static _randomHex(){return s._oneOf(s._chars)}}function r(){return new s}s._chars=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"],s._timeHighBits=["8","9","a","b"],t.v4=r;const i=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;function a(e){return i.test(e)}t.isUUID=a,t.parse=function(e){if(!a(e))throw new Error("invalid uuid");return new o(e)},t.generateUuid=function(){return r().asHex()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(3);function s(e){return e.replace(/\x1b\[\??[0-9]{0,3}(;[0-9]{1,3})?[a-zA-Z]/g,"").replace(/\r/g,"")}t.lastNonemptyLine=function(e){const t=e.split("\n");if(o.isWindows)for(let e=t.length-1;e>=0;e--){const n=s(t[e]);if(n)return n}const n=t.filter(e=>!!e);return n[n.length-1]},t.stripEscapeSequences=s},function(e,t){e.exports=require("child_process")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(31);function s(e){try{e.removeAllListeners("connect"),e.removeAllListeners("error"),e.end(),e.destroy(),e.unref()}catch(e){console.error(e)}}t.randomPort=function(){return 1025+Math.floor(64510*Math.random())},t.findFreePort=function(e,t,n){let r=!1;return new Promise(i=>{const a=setTimeout(()=>{if(!r)return r=!0,i(0)},n);!function e(t,n,r){if(0===n)return r(0);const i=new o.Socket;i.once("connect",()=>(s(i),e(t+1,n-1,r))),i.once("data",()=>{}),i.once("error",o=>(s(i),"ECONNREFUSED"!==o.code?e(t+1,n-1,r):r(t))),i.connect(t,"127.0.0.1")}(e,t,e=>{if(!r)return r=!0,clearTimeout(a),i(e)})})},t.isFreePort=async function(e){return new Promise(t=>{const n=new o.Socket;n.once("connect",()=>{s(n),t(!1)}),n.once("data",()=>{}),n.once("error",e=>{s(n),t("ECONNREFUSED"===e.code)}),n.connect(e,"127.0.0.1")})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wait=async function(e){return new Promise((t,n)=>{setTimeout(()=>t(),e)})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(1),s=n(2),r=n(5),i=n(0);let a;async function c(){if(!a){const e=await r.promisify(o.readFile)(s.join(i.env.appRoot,"product.json"),"utf8");a=JSON.parse(e)}return a}t.getProductInfo=async function(){let e=await c();return e.commit&&e.serverDataFolderName||(e={commit:"94f7de61ece171f4390ece488a220d22cbb0fddd",quality:"insider",serverDataFolderName:".vscode-server-oss"}),e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),s=n(22),r=n(29),i=n(7),a=n(4),c=n(12),l=n(13),u=n(32),m=n(34),d=n(14),h=n(35),p=n(20);class f{constructor(e,t){this.logger=e,this.disposables=t}async resolve(e,t){this.logger.debug(`SSH Resolver called for "${e}"`);const[n,s]=e.split("+");if("ssh-remote"!==n)throw new Error(`SSH Resolver called for invalid protocol "${n}"`);const i=d.HostInfo.parse(s);this.logger.debug(`SSH Resolver called for host: ${i}`);let a=`Could not establish connection to "${i.hostName}".`;this.logger.info(`Setting up SSH remote "${i.hostName}"`);try{return await o.window.withProgress({location:o.ProgressLocation.Notification,title:`Setting up SSH Host ${i.hostName}`,cancellable:!1},n=>r.resolve(e,t,i,n,this.logger,this.disposables))}catch(e){if(v.error(e.message),e instanceof c.NoSshAgentError)throw c.handleNoSshAgentError(!1),o.RemoteAuthorityResolverError.NotAvailable(e.message,!0);throw 1===t.resolveAttempt&&(v.showOutputChannel(),e.message&&(a+=" "+e.message),await async function(e){e.endsWith(".")||(e+=".");const t=await o.window.showErrorMessage(e,{modal:!0},{title:g},{title:w,isCloseAffordance:!0});t&&t.title===g&&await o.commands.executeCommand("workbench.action.reloadWindow")}(a)),e}}}const g="Retry",w="Ignore";let v;async function y(e){const{serverDataFolderName:t}=await p.getProductInfo();return`\n\t\tkill -9 \`ps ax | grep "out/vs/server/main.js" | grep -v grep | awk '{print $1}'\`\n\t\tkill -9 \`ps ax | grep "remoteExtensionHostAgent.js" | grep -v grep | awk '{print $1}'\`\n\t\tsleep 3\n\t\t# go after the restarted agent\n\t\tkill -9 \`ps ax | grep "out/vs/server/main.js" | grep -v grep | awk '{print $1}'\`\n\t\tkill -9 \`ps ax | grep "remoteExtensionHostAgent.js" | grep -v grep | awk '{print $1}'\`\n\t\tkill -9 \`ps ax | grep "watcherService" | grep -v grep | awk '{print $1}'\`\n\t\trm -rf $HOME/${t}/${e?"":"bin"}\n\t\trm -rf $HOME/.vscode-remote/${e?"":"bin"}\n\t`}function S(e){return e=new d.HostInfo(e.hostName,e.user),s.isConnectableSshHost(e,v)}function $(){const{name:e,publisher:t}=n(6);return o.commands.executeCommand("vscode.openIssueReporter",`${t}.${e}`)}function C(){return o.env.openExternal(o.Uri.parse("https://aka.ms/vscode-remote/ssh/provide-feedback"))}function _(){return o.env.openExternal(o.Uri.parse("https://aka.ms/vscode-remote/ssh/getting-started"))}function b(){return o.env.openExternal(o.Uri.parse("https://aka.ms/vscode-remote/ssh"))}function x(e){return`ssh-remote+${d.HostInfo.stringify(e)}`}async function H(){const e=await s.pickSshHost(v);if(e){if("command"===e.type&&"configure"===e.id)return a.configureSshHosts(v),null;if("host"===e.type)return e.host}return null}async function E(e,t=!1){await o.commands.executeCommand("vscode.newWindow",{remoteAuthority:x(e),reuseWindow:t})}t.activate=function(e){const t=o.extensions.all.find(e=>"ms-vscode-remote.remote-ssh-nightly"===e.id),s=o.extensions.all.find(e=>"ms-vscode-remote.remote-ssh"===e.id);t&&s&&o.window.showErrorMessage("Both remote-ssh and remote-ssh-nightly are installed. You must *uninstall*, not disable, the other remote extension.",{modal:!0}),v=new h.Logger("Remote - SSH"),e.subscriptions.push(o.Disposable.from(v));const c=new f(v,e.subscriptions);return o.workspace.registerRemoteAuthorityResolver("ssh-remote",c),function(e){const{name:t,version:o}=n(6);e.info(`${t}@${o}`)}(v),e.subscriptions.push(o.commands.registerCommand("opensshremotes.openEmptyWindow",async()=>{const e=await H();e&&E(e)})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.openEmptyWindowOnCurrentHost",async()=>{const e=r.getActiveRemote();e&&E(e)})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.openEmptyWindowInCurrentWindow",async()=>{const e=await H();e&&E(e,!0)})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.openConfigFile",async()=>{await a.configureSshHosts(v)})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.cleanDevBox",async()=>{const e=await H();if(e){const t=await y(!0),n=await i.generateMultiLineCommand(e,t,v);await m.exec(n)}})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.cleanRemoteServer",async()=>{const e=await H();if(e){const t=await y(),n=await i.generateMultiLineCommand(e,t,v);await m.exec(n)}})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.manageTunnel",async()=>{const t=r.getActiveRemote();return t?await u.getTunnelAddress(e,t,v):o.window.showWarningMessage("Port forwarding requires a workspace on a SSH host.")})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.closeTunnel",async()=>await u.closeTunnel(v))),e.subscriptions.push(o.commands.registerCommand("opensshremotes.getHelp",async()=>b())),e.subscriptions.push(o.commands.registerCommand("opensshremotes.getStarted",async()=>_())),e.subscriptions.push(o.commands.registerCommand("opensshremotes.reportIssue",async()=>$())),e.subscriptions.push(o.commands.registerCommand("opensshremotes.settings",async()=>(function(){const{name:e,publisher:t,extensionPack:s}=n(6),r=[`${t}.${e}`];return s&&s.forEach(e=>r.push(e)),o.commands.executeCommand("workbench.action.openSettings",`@ext:${r.join(",")}`)})())),e.subscriptions.push(o.commands.registerCommand("opensshremotes.provideFeedback",async()=>C())),{getConfiguredSshHostNames:a.getConfiguredSshHostNames,configureSshHosts:()=>a.configureSshHosts(v),onDidChangeSshConfiguration:a.onDidChangeSshConfiguration,openEmptyWindowOnSshHost:E,getActiveSshHost:r.getActiveRemote,reportIssue:$,provideFeedback:C,getHelp:b,getStarted:_,tunnels:{open:async()=>{const t=r.getActiveRemote();if(t)return u.openTunnel(e,t,!1,v)},close:async e=>{await e.close()},active:l.getActiveTunnels,onDidChange:l.onDidChangeActiveTunnels,description:u.tunnelDescription,label:u.tunnelLabel},isConnectableSshHost:S}},t.deactivate=function(){r.shutdown()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),s=n(4),r=n(27),i=n(14),a=n(9),c=n(12);class l{constructor(e){this.label=e}}class u{constructor(){this.label="Configure SSH Hosts...",this.alwaysShow=!0}}class m{constructor(){this.hostName="",this.alwaysShow=!0}get label(){return`➤ ${this.hostName}`}}async function d(e,t){return new Promise((n,s)=>{const r=function(e){const t=e.map(e=>new l(e)),n=new u,s=o.window.createQuickPick();s.ignoreFocusOut=!0,s.title="Select configured SSH host or enter user@host";const r=new m;let i=!1;const a=()=>{const e=[...t];i&&e.push(r),e.push(n),s.items=e};return a(),s.onDidChangeValue(e=>{r.hostName=e,i="string"==typeof e&&e.length>0,a()}),s}(e);let a;r.onDidAccept(async()=>{r.busy=!0;const e=r.selectedItems[0];if(e instanceof u)return void n({type:"command",id:"configure"});const o=e instanceof m?e.hostName:e.label;a=i.HostInfo.fromString(o),t.info(`Selected ${a.toString()}`),r.busy=!1,r.hide(),r.dispose()}),r.onDidHide(async()=>{if(a){const e=await h(a,t);n(e?{type:"host",host:a}:null)}}),r.show()})}async function h(e,t){return await o.window.withProgress({location:o.ProgressLocation.Notification,title:`Confirming that ${e} is reachable...`,cancellable:!0},async(n,o)=>{try{return await r.confirmHost(e,a.runSshTerminalCommandWithLogin,t,o)}catch(e){return!!(e instanceof c.NoSshAgentError&&await c.handleNoSshAgentError(!0))}})}t.isConnectableSshHost=h,t.pickSshHost=async function(e){e.info("Picking SSH host");const t=await s.getConfiguredSshHosts();return await d(t,e)}},function(e,t,n){"use strict";const o=n(24),s=/\s/,r=/\r|\n/,i=/^(Host|Match)$/i,a=/^(")(.*)\1$/,c=1,l=2;class u extends Array{compute(e){let t={},n=(e,n)=>{if("IdentityFile"===e){(t[e]||(t[e]=[])).push(n)}else void 0===t[e]&&(t[e]=n)};for(let t=0;t<this.length;t++){let s=this[t];s.type===c&&("Host"===s.param?o(s.value,e)&&(n(s.param,s.value),s.config.filter(e=>e.type===c).forEach(e=>n(e.param,e.value))):"Match"===s.param||n(s.param,s.value))}return t}find(e){let t=this.constructor.find(this,e);return t?t[0]:null}remove(e){let t=this.constructor.find(this,e);if(t)return this.splice(t[1],1)}toString(){return this.constructor.stringify(this)}append(e){let t=this,n=this,o="  ";e:for(const e of this)if(i.test(e.param))for(const t of e.config)if(t.before){o=t.before;break e}for(const s in e){const r={type:c,param:s,separator:" ",value:e[s],before:"",after:"\n"};i.test(s)?((t=n).push(r),t=r.config=new u):(r.before=o,t.push(r))}return t[t.length-1].after+="\n",n}static find(e,t){if(!t||!("Host"in t||"Match"in t))throw new Error("Can only find by Host or Match");for(let n=0;n<e.length;n++){const o=e[n];if(o.type===c&&i.test(o.param)&&o.param in t&&t[o.param]===o.value)return[o,n]}return null}static stringify(e){let t="",n=e=>{t+=e.before,e.type===l?t+=e.content:e.type===c&&(t+=e.quoted||"IdentityFile"==e.param&&s.test(e.value)?`${e.param}${e.separator}"${e.value}"`:`${e.param}${e.separator}${e.value}`),t+=e.after,e.config&&e.config.forEach(n)};return e.forEach(n),t}static get DIRECTIVE(){return c}static get COMMENT(){return l}static parse(e){let t=0,n=d(),o=new u,m=o;function d(){return e[t++]}function h(){let e="";for(;s.test(n);)e+=n,n=d();return e}function p(){let e="";for(;n&&" "!==n&&"="!==n;)e+=n,n=d();return e}function f(){let e=h();return"="===n&&(e+=n,n=d()),e+h()}function g(){let e="";for(;n&&!r.test(n);)e+=n,n=d();return e.trim()}function w(){let e=h(),t="#"===n?function(){let e=l,t="";for(;n&&!r.test(n);)t+=n,n=d();return{type:e,content:t}}():{type:c,param:p(),separator:f(),value:g()},o=function(){let e="";for(;r.test(n);)e+=n,n=d();return e}();return t.before=e,t.after=o,a.test(t.value)&&(t.value=t.value.replace(a,"$2"),t.quoted=!0),t}for(;n;){let e=w();e.type===c&&i.test(e.param)?((o=m).push(e),o=e.config=new u):o.push(e)}return m}}e.exports=u},function(e,t,n){"use strict";function o(e,t){return e=e.replace(/\./g,"\\.").replace(/\*/g,".*").replace(/\?/g,".?"),new RegExp("^(?:"+e+")$").test(t)}e.exports=function(e,t){const n=e.split(/[,\s]+/).sort((e,t)=>e.startsWith("!")?-1:1);for(const e of n){if("!"==e[0]&&o(e.slice(1),t))return!1;if(o(e,t))return!0}return!1}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0);class s{constructor(e){this.label=e}}class r{constructor(){this.label="Help",this.description="about SSH configuration files",this.alwaysShow=!0}}class i{constructor(){this.label="Settings",this.description="specify a custom configuration file",this.alwaysShow=!0}}async function a(e){return new Promise((t,n)=>{const a=function(e){const t=o.window.createQuickPick();return t.ignoreFocusOut=!0,"string"==typeof e?(t.title="Edit custom SSH configuration file",t.items=[new s(e),new i,new r]):(t.title="Select SSH configuration file to edit",t.items=[...e.map(e=>new s(e)),new i,new r]),t}(e);let c;a.onDidAccept(()=>{const e=a.selectedItems[0];e instanceof r?c={type:"command",id:"help"}:e instanceof i?c={type:"command",id:"settings"}:e.label&&(c={type:"file",path:e.label}),a.hide()}),a.onDidHide(()=>{t(c||void 0)}),a.show()})}t.pickSshConfigurationFile=async function(e){return await a(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(10),s=n(1),r=n(2),i=n(5),a=i.promisify(s.mkdir),c=i.promisify(s.exists);t.untildify=function(e){return e.replace(/^~($|\/|\\)/,`${o.homedir()}$1`)};const l=100;t.mkdirp=async function(e){return await async function e(t,n,o){if(!(n>=o||await c(t))){const s=r.dirname(t);s!==t&&await e(s,++n,o),await a(t)}}(e,0,l)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),s=n(7),r=n(8);t.confirmHost=async function(e,t,n,i){const a=await s.generateMultiLineCommand(e,"uname -sm",n);n.info(`Confirming that ${e.toString()} is a valid reachable host`),n.trace(`Running ${a} to confirm the host platform`);const c=await t({systemInteractor:r.defaultSystemInteractor,command:a,host:e,nickname:"uname",logger:n,token:i}),l=!!c.match(/linux x86_64/i);l||i&&i.isCancellationRequested||(o.window.showErrorMessage(`Can't connect to ${e.toString()}: unreachable or not Linux x86_64 (${c})`),n.error(`${e.toString()}: unreachable or not Linux x86_64. (${c})`));return l}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addDisposableListener=function(e,t,n){return e.on(t,n),{dispose(){e.removeListener(t,n)}}},t.dispose=function e(t,...n){return Array.isArray(t)?(t.forEach(e=>e&&e.dispose()),[]):0===n.length?t?(t.dispose(),t):void 0:(e(t),e(n),[])}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),s=n(11),r=n(30),i=n(7),a=n(9),c=n(13),l=n(18),u=n(8),m=n(15),d=n(19),h=n(20),p="remote.sshContext";let f=null;t.resolve=async function(e,t,n,s,r,i){const a=await v(u.defaultSystemInteractor,n,s,r),m=await c.createTunnel({host:n,remotePort:a,preferredLocalPort:l.randomPort(),name:"VS Code internal",internal:!0,progress:s,logger:r});return r.info(`Resolving "${e}" to "localhost:${m}", attempt: ${t.resolveAttempt}`),o.commands.executeCommand("setContext",p,!0),i.push(function(e,t){return o.workspace.registerResourceLabelFormatter({scheme:"vscode-remote",authority:e,formatting:{label:"${path}",separator:"/",workspaceSuffix:`SSH: ${t.hostName}`,tildify:!0,normalizeDriveLetter:!0}})}(e,n)),f=n,new o.ResolvedAuthority("localhost",m)};const g="opensshremotes.revealTerminal";let w;async function v(e,t,n,c,l=m.generateUuid()){const u=await async function(e,t,n){const s=await h.getProductInfo();let a;n.info(`Using commit id "${s.commit}" and quality "${s.quality}" for server`);let c=o.workspace.getConfiguration().get("remote.SSH.defaultExtensions");if(c&&c.length>0){const e=/^[a-z0-9][a-z0-9\-]*\.[a-z0-9][a-z0-9\-]*$/i;(c=c.filter(t=>e.test(t))).length>0&&(a=c.map(e=>`--install-extension ${e}`).concat("--force").join(" "))}const l=r.serverInstallScript({uuid:t,serverDataFolderName:s.serverDataFolderName,quality:s.quality,commit:s.commit,enableTelemetry:!!o.workspace.getConfiguration().get("telemetry.enableTelemetry"),extensionsSegment:a});return i.generateMultiLineCommand(e,l,n)}(t,l,c);c.info("Install and start server if needed"),w=new o.EventEmitter,n.report({message:`([details](command:${g} "Show details in terminal")) Initializing VS Code Server`});try{return await async function(){let r=0;e:for(;r++<30;){const i=await a.runSshTerminalCommandWithLogin({systemInteractor:e,command:u,host:t,nickname:"install",logger:c,revealTerminal:w.event});c.debug(`Received install output: ${i}`);const m=s.getExitCode(i,l);if("number"==typeof m){if(0===m){if(i.match(/Network is unreachable/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("Network is unreachable");if(i.match(/Could not resolve hostname/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("Could not resolve hostname");if(i.match(/The process tried to write to a nonexistent pipe/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("The process tried to write to a nonexistent pipe");if(i.match(/Connection timed out/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("The connection timed out");if(i.match(/Operation timed out/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("The operation timed out");if(i.match(/No route to host/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("No route to host");if(i.match(/Can't assign requested address/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("Can't assign requested address");const e=y(i,l);if("number"==typeof e&&e>0)return c.info(`Server is listening on port ${e}`),e;throw c.error(`Failed to parse remote port from server output: ${i}`),o.RemoteAuthorityResolverError.NotAvailable("",!0)}if(24===m){c.error(`Server installation process already in progress - waiting and retrying ${r}`),n.report({message:`Connect to VS Code Server - retry ${r}`}),await d.wait(1e3);continue e}throw 25===m?(c.error("Server download failed"),o.RemoteAuthorityResolverError.NotAvailable("Downloading VS Code Server failed. Please try again later.",!0)):26===m?(c.error("Neither curl nor wget is installed - can't download the Server"),o.RemoteAuthorityResolverError.NotAvailable("Downloading VS Code Server failed - please install either curl or wget on the remote.",!0)):(c.error(`Server installation failed with exit code ${m} and output ${i}`),o.RemoteAuthorityResolverError.NotAvailable("",!0))}throw c.error(`Server installation failed with unknown exit code and output ${i}`),o.RemoteAuthorityResolverError.NotAvailable("",!0)}throw o.RemoteAuthorityResolverError.NotAvailable("",!0)}()}finally{w.dispose()}}function y(e,t){const n=new RegExp(`${t}==([0-9]*)==`).exec(e);if(n){const e=parseInt(n[1]);return Number.isNaN(e)?void 0:e}}o.commands.registerCommand(g,()=>{w&&w.fire()}),t.installServer=v,t.getActiveRemote=function(){return f},t.shutdown=function(){o.commands.executeCommand("setContext",p,!1),f=null,c.closeTunnels()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.serverInstallScript=function({uuid:e,quality:t,commit:n,enableTelemetry:o,extensionsSegment:s="",serverDataFolderName:r}){return`\nCOMMIT_ID="${n}"\nEXTENSIONS="${s}"\nTELEMETRY="${o?"":"--disable-telemetry"}"\nexport VSCODE_AGENT_FOLDER=$HOME/${r}\n\n#setup\nVSCH_DIR="$VSCODE_AGENT_FOLDER/bin/$COMMIT_ID"\nVSCH_LOGFILE="$VSCODE_AGENT_FOLDER/.$COMMIT_ID.log"\n\nif [ ! -d "$VSCH_DIR" ]; then\n\tmkdir -p $VSCH_DIR\nfi\n\n${function(e){return`\n\n\t## Copyright (C) 2009 Przemyslaw Pawelczyk <przemoc@gmail.com>\n\t## This script is licensed under the terms of the MIT license.\n\t## https://opensource.org/licenses/MIT\n\n\tLOCKFILE="$VSCH_DIR/vscode-remote-lock.${e}"\n\tLOCKFD=99\n\n\t# PRIVATE\n\t_lock()             { flock -$1 $LOCKFD; }\n\t_no_more_locking()  { _lock u; _lock xn && rm -f $LOCKFILE; }\n\t_prepare_locking()  { eval "exec $LOCKFD>\\"$LOCKFILE\\""; trap _no_more_locking EXIT; }\n\n\t# PUBLIC\n\texlock_now()        { _lock xn; }  # obtain an exclusive lock immediately or fail\n\texlock()            { _lock x; }   # obtain an exclusive lock\n\tshlock()            { _lock s; }   # obtain a shared lock\n\tunlock()            { _lock u; }   # drop a lock\n\n`}(n)}\n_prepare_locking\n\nexlock_now\nif (( $? > 0 ))\nthen\n\techo "Installation already in progress..."\n\techo "${e}##24##"\n\texit 0\nfi\n\n# Migrate old data if needed\n# Check data/ because we just created VSCH_DIR for the lockfile\nif [ ! -d "$VSCODE_AGENT_FOLDER/data" ]; then\n\tif [ -d "$HOME/.vscode-remote" ]; then\n\t\techo "Migrating .vscode-remote to $VSCODE_AGENT_FOLDER..."\n\t\tcp -r "$HOME/.vscode-remote/data" "$VSCODE_AGENT_FOLDER/data"\n\t\tcp -r "$HOME/.vscode-remote/extensions" "$VSCODE_AGENT_FOLDER/extensions"\n\tfi\nfi\n\n# install if needed\nif [ ! -f "$VSCH_DIR/server.sh" ]\nthen\n\techo "Installing to $VSCH_DIR..."\n\tSTASHED_WORKING_DIR="\`pwd\`"\n\tcd $VSCH_DIR\n\n\twget --version &> /dev/null\n\tif (( $? == 0 ))\n\tthen\n\t\techo "Downloading with wget"\n\t\tWGET_ERRORS=$(2>&1 wget -nv -O vscode-server-linux-x64.tar.gz https://update.code.visualstudio.com/commit:$COMMIT_ID/server-linux-x64/${t})\n\t\tif (( $? != 0 ))\n\t\tthen\n\t\t\techo $WGET_ERRORS\n\t\t\techo "${e}##25##"\n\t\t\texit 0\n\t\tfi\n\telse\n\t\tcurl --version &> /dev/null\n\t\tif (( $? == 0 ))\n\t\tthen\n\t\t\techo "Downloading with curl"\n\t\t\tCURL_OUTPUT=$(2>&1 curl -L -s -S https://update.code.visualstudio.com/commit:$COMMIT_ID/server-linux-x64/${t} --output vscode-server-linux-x64.tar.gz -w "%{http_code}")\n\t\t\tif [[ ($? != 0) || ($CURL_OUTPUT != 2??) ]]\n\t\t\tthen\n\t\t\t\techo $CURL_OUTPUT\n\t\t\t\techo "${e}##25##"\n\t\t\t\texit 0\n\t\t\tfi\n\t\telse\n\t\t\techo "Neither wget nor curl is installed"\n\t\t\techo "${e}##26##"\n\t\t\texit 0\n\t\tfi\n\tfi\n\n\n\ttar -xf vscode-server-linux-x64.tar.gz --strip-components 1\n\tif (( $? > 0 ))\n\tthen\n\t\techo "WARNING: tar exited with non-0 exit code"\n\tfi\n\n\t# cheap sanity check\n\tif [ ! -f $VSCH_DIR/node ]\n\tthen\n\t\techo "WARNING: $VSCH_DIR/node doesn't exist. Download/untar may have failed."\n\tfi\n\n\tif [ ! -f $VSCH_DIR/server.sh ]\n\tthen\n\t\techo "WARNING: $VSCH_DIR/server.sh doesn't exist. Download/untar may have failed."\n\tfi\n\n\trm vscode-server-linux-x64.tar.gz\n\tcd $STASHED_WORKING_DIR\n\n\t# install extensions\n\tif [ ! -z "$EXTENSIONS" ]\n\tthen\n\t\techo "Installing extensions..."\n\t\t$VSCH_DIR/server.sh $TELEMETRY $EXTENSIONS\n\tfi\n\nelse\n\techo "Found existing installation at $VSCH_DIR..."\nfi\n\n# launch if needed\nRUNNING="\`ps ax | grep $VSCH_DIR/server.sh | grep -v grep | wc -l | tr -d '[:space:]'\`"\nif [ "$RUNNING" = "0" ]\nthen\n\techo "Printing the current remote environment..."\n\tprintenv\n\techo "Starting server..."\n\texport PATH="$VSCH_DIR/bin:$PATH"\n\t$VSCH_DIR/server.sh $TELEMETRY --port=0 &> $VSCH_LOGFILE < /dev/null &\n\n\tstopTime=$((SECONDS+4))\n\n\twhile (($SECONDS < $stopTime))\n\tdo\n\t\tPORT=\`cat "$VSCH_LOGFILE" | grep -a -E 'Extension host agent listening on [0-9]+' | grep -v grep | grep -o -E '[0-9]+'\`\n\t\tif [[ $PORT != '' ]]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\n\t\techo "Waiting for server log..."\n\t\tsleep .5\n\tdone\nelse\n\techo "Found running server..."\nfi\n\necho " "\necho "*"\necho "* Reminder: You may only use this software with Visual Studio family products,"\necho "* as described in the license (https://go.microsoft.com/fwlink/?linkid=2077057)"\necho "*"\necho " "\n\nPORT=\`cat "$VSCH_LOGFILE" | grep -a -E 'Extension host agent listening on [0-9]+' | grep -v grep | grep -o -E '[0-9]+'\`\nif [[ $PORT == '' ]]\nthen\n\techo "Server did not start successfully. Full server log:"\n\tcat $VSCH_LOGFILE\nfi\necho "${e}==$PORT=="\n\nunlock\n`}},function(e,t){e.exports=require("net")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),s=n(33),r=n(13);function i(e){return""===e.name?`${e.host.hostName}:${e.remotePort}`:e.name}function a(e){return`${""===e.name?"":`${e.host.hostName}:${e.remotePort} `}forwarded to localhost${e.localPort===e.remotePort?"":`:${e.localPort}`}`}t.tunnelLabel=i,t.tunnelDescription=a;class c{constructor(e){this.tunnel=e}get label(){return i(this.tunnel)}get description(){return a(this.tunnel)}get localPort(){return this.tunnel.localPort}closeTunnel(){this.tunnel.close()}get remoteAddress(){return""===this.tunnel.name?`${this.tunnel.host.hostName}:${this.tunnel.remotePort}`:`${this.tunnel.name} (${this.tunnel.host.hostName}:${this.tunnel.remotePort})`}}class l{constructor(){this.label="Create New Forward...",this.alwaysShow=!0}}async function u(e,t,n,i){const a=await s.askForRemotePort(e,t,i);if(null===a)return;const c=await s.askForForwarderName(t,a,i);return null!==c?o.window.withProgress({location:o.ProgressLocation.Notification,title:`Setting up port forwarding from ${t.hostName}`,cancellable:!1},async e=>{let s;try{s=await r.createTunnel({host:t,remotePort:a,name:c,internal:!1,progress:e,logger:i})}catch(e){return void o.window.showErrorMessage(e.message)}const l=`localhost:${s}`;if(n){const e="Copy Address",n="Open in Browser";o.window.showInformationMessage(`${t.hostName}:${a} is now available as ${l}`,e,n).then(t=>{t===e?o.env.clipboard.writeText(l):t===n&&o.env.openExternal(o.Uri.parse(`http://${l}`))})}return l}):void 0}t.getTunnelAddress=async function(e,t,n){const s=await async function(e){return new Promise((e,t)=>{const n=r.getActiveTunnels();if(0===n.length)return void e({type:"command",value:"create"});let s=n.map(e=>new c(e));const i=new l;s.push(i);const a=o.window.createQuickPick();a.items=s,a.title="Copy Local Forwarding Address or Create New Forward";let u=!1;a.onDidAccept(async()=>{u=!0,a.busy=!0;const t=a.selectedItems[0];let n;n=t===i?{type:"command",value:"create"}:{type:"address",value:`localhost:${t.localPort}`},a.busy=!1,a.hide(),a.dispose(),e(n)}),a.onDidHide(()=>{u||e(null)}),a.show()})}();return s&&"address"===s.type?(o.env.clipboard.writeText(`${s.value}`),o.window.showInformationMessage(`"${s.value}" copied to clipboard`),s.value):s&&"command"===s.type&&"create"===s.value?await u(e,t,!0,n):void 0},t.openTunnel=u,t.closeTunnel=async function(e){return new Promise((e,t)=>{let n=r.getActiveTunnels().map(e=>new c(e));if(0===n.length)return o.window.showInformationMessage("No ports are currently forwarded"),void e(null);const s=o.window.createQuickPick();s.items=n,s.title="Select the port that should no longer be forwarded";let i=!1;s.onDidAccept(async()=>{i=!0,s.busy=!0;const t=s.selectedItems[0];t.closeTunnel(),o.window.showInformationMessage(`Port ${t.remoteAddress} is no longer forwarded`),s.busy=!1,s.hide(),s.dispose(),e(t.localPort)}),s.onDidHide(()=>{i||e(null)}),s.show()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0);t.askForRemotePort=async function(e,t,n){let s=!1;return new Promise(async(n,r)=>{const i=o.window.createInputBox();i.title=`Enter the port on "${t.hostName}" that should be forwarded:`;const a=e.workspaceState.get("remote.SSH.tunnelPort");void 0!==a&&(i.value=a.toString()),i.show(),i.onDidChangeValue(e=>{i.validationMessage=function(e){if(""!==e){let t=parseInt(e);if(isNaN(t)||t<=0)return"Enter a valid port number";if(t<1024)return"Port must be >= 1024"}return""}(e)}),i.onDidAccept(()=>{if(!i.validationMessage){s=!0;const t=parseInt(i.value);e.workspaceState.update("remote.SSH.tunnelPort",t),i.hide(),i.dispose(),n(t)}}),i.onDidHide(()=>{s||n(null)})})},t.askForForwarderName=async function(e,t,n){let s=!1;return new Promise(async(n,r)=>{const i=o.window.createInputBox();i.title=`Name the port forward for "${e.hostName}:${t}" or leave empty`,i.value=function(e){switch(e){case 8e3:case 80:return"Browser";case 5901:return"VNC"}return""}(t),i.show(),i.onDidAccept(()=>{i.validationMessage||(s=!0,i.hide(),i.dispose(),n(i.value))}),i.onDidHide(()=>{s||n(null)})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(17);t.exec=async function(e,t={encoding:"utf8"}){return new Promise((n,s)=>{o.exec(e,t,(e,t,o)=>{if(e)return s(e);n(t)})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),s=n(16);t.Logger=class{constructor(e){this.disposables=[],this.outputChannel=o.window.createOutputChannel(e),this.disposables.push(this.outputChannel),this.disposables.push(o.env.onDidChangeLogLevel(()=>this.logCurrentLogLevel()))}showOutputChannel(){return this.outputChannel.show()}info(e){this.log(e,o.LogLevel.Info)}trace(e){this.log(e,o.LogLevel.Trace)}debug(e){this.log(e,o.LogLevel.Debug)}error(e){this.log(e,o.LogLevel.Error)}logCurrentLogLevel(){this.info("Log Level: "+o.LogLevel[o.env.logLevel])}log(e,t){e=String(e),o.env.logLevel!==o.LogLevel.Trace&&(e=s.stripEscapeSequences(e)),this.outputChannel.appendLine(e)}dispose(){this.outputChannel.dispose()}}}]));
//# sourceMappingURL=extension.js.map